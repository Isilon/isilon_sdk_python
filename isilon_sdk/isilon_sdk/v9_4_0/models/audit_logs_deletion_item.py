# coding: utf-8

"""
    Isilon SDK

    Isilon SDK - Language bindings for the OneFS API  # noqa: E501

    OpenAPI spec version: 15
    Contact: sdk@isilon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AuditLogsDeletionItem(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'deleted_files': 'int',
        'lnn': 'int',
        'space_freed': 'str'
    }

    attribute_map = {
        'deleted_files': 'deleted_files',
        'lnn': 'lnn',
        'space_freed': 'space_freed'
    }

    def __init__(self, deleted_files=None, lnn=None, space_freed=None):  # noqa: E501
        """AuditLogsDeletionItem - a model defined in Swagger"""  # noqa: E501

        self._deleted_files = None
        self._lnn = None
        self._space_freed = None
        self.discriminator = None

        if deleted_files is not None:
            self.deleted_files = deleted_files
        if lnn is not None:
            self.lnn = lnn
        if space_freed is not None:
            self.space_freed = space_freed

    @property
    def deleted_files(self):
        """Gets the deleted_files of this AuditLogsDeletionItem.  # noqa: E501


        :return: The deleted_files of this AuditLogsDeletionItem.  # noqa: E501
        :rtype: int
        """
        return self._deleted_files

    @deleted_files.setter
    def deleted_files(self, deleted_files):
        """Sets the deleted_files of this AuditLogsDeletionItem.


        :param deleted_files: The deleted_files of this AuditLogsDeletionItem.  # noqa: E501
        :type: int
        """
        if deleted_files is not None and deleted_files > 4294967295:  # noqa: E501
            raise ValueError("Invalid value for `deleted_files`, must be a value less than or equal to `4294967295`")  # noqa: E501
        if deleted_files is not None and deleted_files < 0:  # noqa: E501
            raise ValueError("Invalid value for `deleted_files`, must be a value greater than or equal to `0`")  # noqa: E501

        self._deleted_files = deleted_files

    @property
    def lnn(self):
        """Gets the lnn of this AuditLogsDeletionItem.  # noqa: E501


        :return: The lnn of this AuditLogsDeletionItem.  # noqa: E501
        :rtype: int
        """
        return self._lnn

    @lnn.setter
    def lnn(self, lnn):
        """Sets the lnn of this AuditLogsDeletionItem.


        :param lnn: The lnn of this AuditLogsDeletionItem.  # noqa: E501
        :type: int
        """
        if lnn is not None and lnn > 4294967295:  # noqa: E501
            raise ValueError("Invalid value for `lnn`, must be a value less than or equal to `4294967295`")  # noqa: E501
        if lnn is not None and lnn < 1:  # noqa: E501
            raise ValueError("Invalid value for `lnn`, must be a value greater than or equal to `1`")  # noqa: E501

        self._lnn = lnn

    @property
    def space_freed(self):
        """Gets the space_freed of this AuditLogsDeletionItem.  # noqa: E501


        :return: The space_freed of this AuditLogsDeletionItem.  # noqa: E501
        :rtype: str
        """
        return self._space_freed

    @space_freed.setter
    def space_freed(self, space_freed):
        """Sets the space_freed of this AuditLogsDeletionItem.


        :param space_freed: The space_freed of this AuditLogsDeletionItem.  # noqa: E501
        :type: str
        """
        if space_freed is not None and len(space_freed) > 255:
            raise ValueError("Invalid value for `space_freed`, length must be less than or equal to `255`")  # noqa: E501
        if space_freed is not None and len(space_freed) < 0:
            raise ValueError("Invalid value for `space_freed`, length must be greater than or equal to `0`")  # noqa: E501

        self._space_freed = space_freed

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AuditLogsDeletionItem):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
