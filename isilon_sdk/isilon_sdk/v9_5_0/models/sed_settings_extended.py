# coding: utf-8

"""
    Isilon SDK

    Isilon SDK - Language bindings for the OneFS API  # noqa: E501

    OpenAPI spec version: 16
    Contact: sdk@isilon.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SedSettingsExtended(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'kmip_enabled': 'bool'
    }

    attribute_map = {
        'kmip_enabled': 'kmip_enabled'
    }

    def __init__(self, kmip_enabled=None):  # noqa: E501
        """SedSettingsExtended - a model defined in Swagger"""  # noqa: E501

        self._kmip_enabled = None
        self.discriminator = None

        if kmip_enabled is not None:
            self.kmip_enabled = kmip_enabled

    @property
    def kmip_enabled(self):
        """Gets the kmip_enabled of this SedSettingsExtended.  # noqa: E501

        True if the KMIP SEDS feature is enabled and migration is allowed. When set to false, the KMIP SEDS feature is disabled, migration is not allowed. User can disable the feature only when ALL keys are in LOCAL status.  # noqa: E501

        :return: The kmip_enabled of this SedSettingsExtended.  # noqa: E501
        :rtype: bool
        """
        return self._kmip_enabled

    @kmip_enabled.setter
    def kmip_enabled(self, kmip_enabled):
        """Sets the kmip_enabled of this SedSettingsExtended.

        True if the KMIP SEDS feature is enabled and migration is allowed. When set to false, the KMIP SEDS feature is disabled, migration is not allowed. User can disable the feature only when ALL keys are in LOCAL status.  # noqa: E501

        :param kmip_enabled: The kmip_enabled of this SedSettingsExtended.  # noqa: E501
        :type: bool
        """

        self._kmip_enabled = kmip_enabled

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SedSettingsExtended):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
